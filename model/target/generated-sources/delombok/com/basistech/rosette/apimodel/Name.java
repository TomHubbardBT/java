// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.util.ISO15924;
import com.basistech.util.LanguageCode;
import javax.validation.constraints.NotNull;

/**
 * Class that represents a name.
 */
public final class Name {
    /**
     */
    @NotNull
    private final String text;
    /**
     */
    private final String entityType;
    /**
     */
    private final ISO15924 script;
    /**
     */
    private final LanguageCode language;

    /**
     * Default constructor for lombok
     *
     * @param name
     * @param entityType
     * @param script
     * @param language
     */
    public Name(String name, String entityType, ISO15924 script, LanguageCode language) {
        this.text = name;
        this.entityType = entityType;
        this.script = script;
        this.language = language;
    }

    /**
     * Constructor for {@code Name} with default entityType PERSON, unknown script and unknown language
     * This allows Jackson to use the single arg constructor to deserialize a short-hand value
     * like {"name": "Mike"} instead of the full fledged {"name": {"text": "Mike"}}
     * @param name a name
     */
    public Name(String name) {
        this.text = name;
        this.entityType = "PERSON";
        this.script = ISO15924.Zyyy;
        this.language = LanguageCode.UNKNOWN;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class NameBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String text;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String entityType;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private ISO15924 script;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private LanguageCode language;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        NameBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public NameBuilder text(final String text) {
            this.text = text;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public NameBuilder entityType(final String entityType) {
            this.entityType = entityType;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public NameBuilder script(final ISO15924 script) {
            this.script = script;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public NameBuilder language(final LanguageCode language) {
            this.language = language;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public Name build() {
            return new Name(text, entityType, script, language);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "Name.NameBuilder(text=" + this.text + ", entityType=" + this.entityType + ", script=" + this.script + ", language=" + this.language + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static NameBuilder builder() {
        return new NameBuilder();
    }

    /**
     * @return text of the name
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getText() {
        return this.text;
    }

    /**
     * @return entity type of the name
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getEntityType() {
        return this.entityType;
    }

    /**
     * @return script of the name, {@link ISO15924}
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public ISO15924 getScript() {
        return this.script;
    }

    /**
     * @return language of the name, {@link LanguageCode}
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public LanguageCode getLanguage() {
        return this.language;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof Name)) return false;
        final Name other = (Name) o;
        final Object this$text = this.getText();
        final Object other$text = other.getText();
        if (this$text == null ? other$text != null : !this$text.equals(other$text)) return false;
        final Object this$entityType = this.getEntityType();
        final Object other$entityType = other.getEntityType();
        if (this$entityType == null ? other$entityType != null : !this$entityType.equals(other$entityType)) return false;
        final Object this$script = this.getScript();
        final Object other$script = other.getScript();
        if (this$script == null ? other$script != null : !this$script.equals(other$script)) return false;
        final Object this$language = this.getLanguage();
        final Object other$language = other.getLanguage();
        if (this$language == null ? other$language != null : !this$language.equals(other$language)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $text = this.getText();
        result = result * PRIME + ($text == null ? 43 : $text.hashCode());
        final Object $entityType = this.getEntityType();
        result = result * PRIME + ($entityType == null ? 43 : $entityType.hashCode());
        final Object $script = this.getScript();
        result = result * PRIME + ($script == null ? 43 : $script.hashCode());
        final Object $language = this.getLanguage();
        result = result * PRIME + ($language == null ? 43 : $language.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "Name(text=" + this.getText() + ", entityType=" + this.getEntityType() + ", script=" + this.getScript() + ", language=" + this.getLanguage() + ")";
    }
}
