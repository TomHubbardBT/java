// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import java.util.List;

/**
 * Simple api response data model for entity extraction
 */
@JacksonMixin
public class TopicsResponse extends Response {
    /**
     */
    private final List<Keyphrase> keyphrases;
    /**
     */
    private final List<Concept> concepts;

    @java.beans.ConstructorProperties({"keyphrases", "concepts"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    TopicsResponse(final List<Keyphrase> keyphrases, final List<Concept> concepts) {
        this.keyphrases = keyphrases;
        this.concepts = concepts;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class TopicsResponseBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private List<Keyphrase> keyphrases;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private List<Concept> concepts;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        TopicsResponseBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public TopicsResponseBuilder keyphrases(final List<Keyphrase> keyphrases) {
            this.keyphrases = keyphrases;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public TopicsResponseBuilder concepts(final List<Concept> concepts) {
            this.concepts = concepts;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public TopicsResponse build() {
            return new TopicsResponse(keyphrases, concepts);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "TopicsResponse.TopicsResponseBuilder(keyphrases=" + this.keyphrases + ", concepts=" + this.concepts + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static TopicsResponseBuilder builder() {
        return new TopicsResponseBuilder();
    }

    /**
     * @return the list of extracted keyphrases
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<Keyphrase> getKeyphrases() {
        return this.keyphrases;
    }

    /**
     * @return the list of extracted concepts
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<Concept> getConcepts() {
        return this.concepts;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof TopicsResponse)) return false;
        final TopicsResponse other = (TopicsResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$keyphrases = this.getKeyphrases();
        final Object other$keyphrases = other.getKeyphrases();
        if (this$keyphrases == null ? other$keyphrases != null : !this$keyphrases.equals(other$keyphrases)) return false;
        final Object this$concepts = this.getConcepts();
        final Object other$concepts = other.getConcepts();
        if (this$concepts == null ? other$concepts != null : !this$concepts.equals(other$concepts)) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof TopicsResponse;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $keyphrases = this.getKeyphrases();
        result = result * PRIME + ($keyphrases == null ? 43 : $keyphrases.hashCode());
        final Object $concepts = this.getConcepts();
        result = result * PRIME + ($concepts == null ? 43 : $concepts.hashCode());
        return result;
    }
}
