// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;

/**
 * Response ping data
 */
@JacksonMixin
public class PingResponse extends Response {
    /**
     */
    private final String message;
    /**
     */
    private final long time;

    @java.beans.ConstructorProperties({"message", "time"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    PingResponse(final String message, final long time) {
        this.message = message;
        this.time = time;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class PingResponseBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String message;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private long time;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        PingResponseBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public PingResponseBuilder message(final String message) {
            this.message = message;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public PingResponseBuilder time(final long time) {
            this.time = time;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public PingResponse build() {
            return new PingResponse(message, time);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "PingResponse.PingResponseBuilder(message=" + this.message + ", time=" + this.time + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static PingResponseBuilder builder() {
        return new PingResponseBuilder();
    }

    /**
     * @return the ping response message
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getMessage() {
        return this.message;
    }

    /**
     * @return the ping response timestamp
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public long getTime() {
        return this.time;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof PingResponse)) return false;
        final PingResponse other = (PingResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$message = this.getMessage();
        final Object other$message = other.getMessage();
        if (this$message == null ? other$message != null : !this$message.equals(other$message)) return false;
        if (this.getTime() != other.getTime()) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof PingResponse;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $message = this.getMessage();
        result = result * PRIME + ($message == null ? 43 : $message.hashCode());
        final long $time = this.getTime();
        result = result * PRIME + (int) ($time >>> 32 ^ $time);
        return result;
    }
}
