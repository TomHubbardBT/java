// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import java.util.List;

/**
 * Simple api response data model for text embedding
 */
@JacksonMixin
public class TextEmbeddingResponse extends Response {
    /**
     */
    private final List<Double> embedding;

    @java.beans.ConstructorProperties({"embedding"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    TextEmbeddingResponse(final List<Double> embedding) {
        this.embedding = embedding;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class TextEmbeddingResponseBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private List<Double> embedding;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        TextEmbeddingResponseBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public TextEmbeddingResponseBuilder embedding(final List<Double> embedding) {
            this.embedding = embedding;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public TextEmbeddingResponse build() {
            return new TextEmbeddingResponse(embedding);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "TextEmbeddingResponse.TextEmbeddingResponseBuilder(embedding=" + this.embedding + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static TextEmbeddingResponseBuilder builder() {
        return new TextEmbeddingResponseBuilder();
    }

    /**
     * @return the embedding vector as a list
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<Double> getEmbedding() {
        return this.embedding;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof TextEmbeddingResponse)) return false;
        final TextEmbeddingResponse other = (TextEmbeddingResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$embedding = this.getEmbedding();
        final Object other$embedding = other.getEmbedding();
        if (this$embedding == null ? other$embedding != null : !this$embedding.equals(other$embedding)) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof TextEmbeddingResponse;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $embedding = this.getEmbedding();
        result = result * PRIME + ($embedding == null ? 43 : $embedding.hashCode());
        return result;
    }
}
