// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import java.util.List;

/**
 * Sentences with all extracted syntactical dependencies in it
 */
@JacksonMixin
public final class SentenceWithDependencies {
    /**
     */
    private final Integer startTokenIndex;
    /**
     */
    private final Integer endTokenIndex;
    /**
     */
    private final List<Dependency> dependencies;

    @java.beans.ConstructorProperties({"startTokenIndex", "endTokenIndex", "dependencies"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    SentenceWithDependencies(final Integer startTokenIndex, final Integer endTokenIndex, final List<Dependency> dependencies) {
        this.startTokenIndex = startTokenIndex;
        this.endTokenIndex = endTokenIndex;
        this.dependencies = dependencies;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class SentenceWithDependenciesBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Integer startTokenIndex;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Integer endTokenIndex;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private List<Dependency> dependencies;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        SentenceWithDependenciesBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public SentenceWithDependenciesBuilder startTokenIndex(final Integer startTokenIndex) {
            this.startTokenIndex = startTokenIndex;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public SentenceWithDependenciesBuilder endTokenIndex(final Integer endTokenIndex) {
            this.endTokenIndex = endTokenIndex;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public SentenceWithDependenciesBuilder dependencies(final List<Dependency> dependencies) {
            this.dependencies = dependencies;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public SentenceWithDependencies build() {
            return new SentenceWithDependencies(startTokenIndex, endTokenIndex, dependencies);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "SentenceWithDependencies.SentenceWithDependenciesBuilder(startTokenIndex=" + this.startTokenIndex + ", endTokenIndex=" + this.endTokenIndex + ", dependencies=" + this.dependencies + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static SentenceWithDependenciesBuilder builder() {
        return new SentenceWithDependenciesBuilder();
    }

    /**
     * @return start token index
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Integer getStartTokenIndex() {
        return this.startTokenIndex;
    }

    /**
     * @return end token index
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Integer getEndTokenIndex() {
        return this.endTokenIndex;
    }

    /**
     * @return list of syntactical dependencies
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<Dependency> getDependencies() {
        return this.dependencies;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof SentenceWithDependencies)) return false;
        final SentenceWithDependencies other = (SentenceWithDependencies) o;
        final Object this$startTokenIndex = this.getStartTokenIndex();
        final Object other$startTokenIndex = other.getStartTokenIndex();
        if (this$startTokenIndex == null ? other$startTokenIndex != null : !this$startTokenIndex.equals(other$startTokenIndex)) return false;
        final Object this$endTokenIndex = this.getEndTokenIndex();
        final Object other$endTokenIndex = other.getEndTokenIndex();
        if (this$endTokenIndex == null ? other$endTokenIndex != null : !this$endTokenIndex.equals(other$endTokenIndex)) return false;
        final Object this$dependencies = this.getDependencies();
        final Object other$dependencies = other.getDependencies();
        if (this$dependencies == null ? other$dependencies != null : !this$dependencies.equals(other$dependencies)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $startTokenIndex = this.getStartTokenIndex();
        result = result * PRIME + ($startTokenIndex == null ? 43 : $startTokenIndex.hashCode());
        final Object $endTokenIndex = this.getEndTokenIndex();
        result = result * PRIME + ($endTokenIndex == null ? 43 : $endTokenIndex.hashCode());
        final Object $dependencies = this.getDependencies();
        result = result * PRIME + ($dependencies == null ? 43 : $dependencies.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "SentenceWithDependencies(startTokenIndex=" + this.getStartTokenIndex() + ", endTokenIndex=" + this.getEndTokenIndex() + ", dependencies=" + this.getDependencies() + ")";
    }
}
