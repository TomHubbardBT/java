// Generated by delombok at Wed Dec 12 18:59:26 EST 2018
/*
 * Copyright 2018 Basis Technology Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import com.basistech.util.TextDomain;

/**
 * Supported language/script/scheme pairs
 */
@JacksonMixin
public final class SupportedLanguagePair {
    /**
     */
    private final TextDomain source;
    /**
     */
    private final TextDomain target;

    @java.beans.ConstructorProperties({"source", "target"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    SupportedLanguagePair(final TextDomain source, final TextDomain target) {
        this.source = source;
        this.target = target;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class SupportedLanguagePairBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private TextDomain source;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private TextDomain target;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        SupportedLanguagePairBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public SupportedLanguagePairBuilder source(final TextDomain source) {
            this.source = source;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public SupportedLanguagePairBuilder target(final TextDomain target) {
            this.target = target;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public SupportedLanguagePair build() {
            return new SupportedLanguagePair(source, target);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "SupportedLanguagePair.SupportedLanguagePairBuilder(source=" + this.source + ", target=" + this.target + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static SupportedLanguagePairBuilder builder() {
        return new SupportedLanguagePairBuilder();
    }

    /**
     * @return the source TextDomain
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public TextDomain getSource() {
        return this.source;
    }

    /**
     * @return the target TextDomain
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public TextDomain getTarget() {
        return this.target;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof SupportedLanguagePair)) return false;
        final SupportedLanguagePair other = (SupportedLanguagePair) o;
        final Object this$source = this.getSource();
        final Object other$source = other.getSource();
        if (this$source == null ? other$source != null : !this$source.equals(other$source)) return false;
        final Object this$target = this.getTarget();
        final Object other$target = other.getTarget();
        if (this$target == null ? other$target != null : !this$target.equals(other$target)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $source = this.getSource();
        result = result * PRIME + ($source == null ? 43 : $source.hashCode());
        final Object $target = this.getTarget();
        result = result * PRIME + ($target == null ? 43 : $target.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "SupportedLanguagePair(source=" + this.getSource() + ", target=" + this.getTarget() + ")";
    }
}
