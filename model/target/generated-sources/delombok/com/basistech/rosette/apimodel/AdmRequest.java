// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.dm.AnnotatedText;
import com.basistech.util.LanguageCode;

/**
 * A request to a document-processing endpoint that supplies the input as partially-annotated
 * input in a {@link com.basistech.rosette.dm.AnnotatedText} object.
 */
public final class AdmRequest<O extends Options> extends Request {
    public static final String ADM_CONTENT_TYPE = "model/vnd.rosette.annotated-data-model";
    /**
     */
    private final AnnotatedText text;
    /**
     */
    private final O options;
    /**
     */
    private final String genre;
    /**
     */
    private final LanguageCode language;

    // workaround for inheritance https://github.com/rzwitserloot/lombok/issues/853
    public AdmRequest(String profileId, AnnotatedText text, O options, String genre, LanguageCode language) {
        super(profileId);
        this.text = text;
        this.options = options;
        this.genre = genre;
        this.language = language;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class AdmRequestBuilder<O extends Options> {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String profileId;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private AnnotatedText text;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private O options;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String genre;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private LanguageCode language;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        AdmRequestBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AdmRequestBuilder<O> profileId(final String profileId) {
            this.profileId = profileId;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AdmRequestBuilder<O> text(final AnnotatedText text) {
            this.text = text;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AdmRequestBuilder<O> options(final O options) {
            this.options = options;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AdmRequestBuilder<O> genre(final String genre) {
            this.genre = genre;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AdmRequestBuilder<O> language(final LanguageCode language) {
            this.language = language;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public AdmRequest<O> build() {
            return new AdmRequest<O>(profileId, text, options, genre, language);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "AdmRequest.AdmRequestBuilder(profileId=" + this.profileId + ", text=" + this.text + ", options=" + this.options + ", genre=" + this.genre + ", language=" + this.language + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static <O extends Options> AdmRequestBuilder<O> builder() {
        return new AdmRequestBuilder<O>();
    }

    /**
     * @return {@link com.basistech.rosette.dm.AnnotatedText}
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public AnnotatedText getText() {
        return this.text;
    }

    /**
     * @return options
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public O getOptions() {
        return this.options;
    }

    /**
     * @return genre
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getGenre() {
        return this.genre;
    }

    /**
     * @return language
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public LanguageCode getLanguage() {
        return this.language;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof AdmRequest)) return false;
        final AdmRequest<?> other = (AdmRequest<?>) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$text = this.getText();
        final Object other$text = other.getText();
        if (this$text == null ? other$text != null : !this$text.equals(other$text)) return false;
        final Object this$options = this.getOptions();
        final Object other$options = other.getOptions();
        if (this$options == null ? other$options != null : !this$options.equals(other$options)) return false;
        final Object this$genre = this.getGenre();
        final Object other$genre = other.getGenre();
        if (this$genre == null ? other$genre != null : !this$genre.equals(other$genre)) return false;
        final Object this$language = this.getLanguage();
        final Object other$language = other.getLanguage();
        if (this$language == null ? other$language != null : !this$language.equals(other$language)) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof AdmRequest;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $text = this.getText();
        result = result * PRIME + ($text == null ? 43 : $text.hashCode());
        final Object $options = this.getOptions();
        result = result * PRIME + ($options == null ? 43 : $options.hashCode());
        final Object $genre = this.getGenre();
        result = result * PRIME + ($genre == null ? 43 : $genre.hashCode());
        final Object $language = this.getLanguage();
        result = result * PRIME + ($language == null ? 43 : $language.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "AdmRequest(text=" + this.getText() + ", options=" + this.getOptions() + ", genre=" + this.getGenre() + ", language=" + this.getLanguage() + ")";
    }
}
