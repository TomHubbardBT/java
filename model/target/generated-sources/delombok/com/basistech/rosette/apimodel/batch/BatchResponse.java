// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel.batch;

import com.basistech.rosette.annotations.JacksonMixin;
import com.basistech.rosette.apimodel.Response;

@JacksonMixin
public final class BatchResponse extends Response {
    // batch id
    private final String id;
    // URL where the batch results will be stored
    private final String batchOutputUrl;
    // progress checking endpoint/url
    private final String batchCheckProgressUrl;

    @java.beans.ConstructorProperties({"id", "batchOutputUrl", "batchCheckProgressUrl"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    BatchResponse(final String id, final String batchOutputUrl, final String batchCheckProgressUrl) {
        this.id = id;
        this.batchOutputUrl = batchOutputUrl;
        this.batchCheckProgressUrl = batchCheckProgressUrl;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class BatchResponseBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String id;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String batchOutputUrl;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String batchCheckProgressUrl;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        BatchResponseBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public BatchResponseBuilder id(final String id) {
            this.id = id;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public BatchResponseBuilder batchOutputUrl(final String batchOutputUrl) {
            this.batchOutputUrl = batchOutputUrl;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public BatchResponseBuilder batchCheckProgressUrl(final String batchCheckProgressUrl) {
            this.batchCheckProgressUrl = batchCheckProgressUrl;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public BatchResponse build() {
            return new BatchResponse(id, batchOutputUrl, batchCheckProgressUrl);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "BatchResponse.BatchResponseBuilder(id=" + this.id + ", batchOutputUrl=" + this.batchOutputUrl + ", batchCheckProgressUrl=" + this.batchCheckProgressUrl + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static BatchResponseBuilder builder() {
        return new BatchResponseBuilder();
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getId() {
        return this.id;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getBatchOutputUrl() {
        return this.batchOutputUrl;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getBatchCheckProgressUrl() {
        return this.batchCheckProgressUrl;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof BatchResponse)) return false;
        final BatchResponse other = (BatchResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$id = this.getId();
        final Object other$id = other.getId();
        if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
        final Object this$batchOutputUrl = this.getBatchOutputUrl();
        final Object other$batchOutputUrl = other.getBatchOutputUrl();
        if (this$batchOutputUrl == null ? other$batchOutputUrl != null : !this$batchOutputUrl.equals(other$batchOutputUrl)) return false;
        final Object this$batchCheckProgressUrl = this.getBatchCheckProgressUrl();
        final Object other$batchCheckProgressUrl = other.getBatchCheckProgressUrl();
        if (this$batchCheckProgressUrl == null ? other$batchCheckProgressUrl != null : !this$batchCheckProgressUrl.equals(other$batchCheckProgressUrl)) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof BatchResponse;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $id = this.getId();
        result = result * PRIME + ($id == null ? 43 : $id.hashCode());
        final Object $batchOutputUrl = this.getBatchOutputUrl();
        result = result * PRIME + ($batchOutputUrl == null ? 43 : $batchOutputUrl.hashCode());
        final Object $batchCheckProgressUrl = this.getBatchCheckProgressUrl();
        result = result * PRIME + ($batchCheckProgressUrl == null ? 43 : $batchCheckProgressUrl.hashCode());
        return result;
    }
}
