// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import java.util.List;

/**
 * Simple api response data model for relationship extraction
 */
@JacksonMixin
public class RelationshipsResponse extends Response {
    /**
     */
    private final List<Relationship> relationships;

    @java.beans.ConstructorProperties({"relationships"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    RelationshipsResponse(final List<Relationship> relationships) {
        this.relationships = relationships;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class RelationshipsResponseBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private List<Relationship> relationships;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        RelationshipsResponseBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public RelationshipsResponseBuilder relationships(final List<Relationship> relationships) {
            this.relationships = relationships;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public RelationshipsResponse build() {
            return new RelationshipsResponse(relationships);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "RelationshipsResponse.RelationshipsResponseBuilder(relationships=" + this.relationships + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static RelationshipsResponseBuilder builder() {
        return new RelationshipsResponseBuilder();
    }

    /**
     * @return the list of extracted relationships
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<Relationship> getRelationships() {
        return this.relationships;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof RelationshipsResponse)) return false;
        final RelationshipsResponse other = (RelationshipsResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$relationships = this.getRelationships();
        final Object other$relationships = other.getRelationships();
        if (this$relationships == null ? other$relationships != null : !this$relationships.equals(other$relationships)) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof RelationshipsResponse;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $relationships = this.getRelationships();
        result = result * PRIME + ($relationships == null ? 43 : $relationships.hashCode());
        return result;
    }
}
