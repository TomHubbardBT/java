// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;

/**
 * Response data model for comparison of two names.
 */
@JacksonMixin
public class NameSimilarityResponse extends Response {
    /**
     */
    private final Double score;

    @java.beans.ConstructorProperties({"score"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    NameSimilarityResponse(final Double score) {
        this.score = score;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class NameSimilarityResponseBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Double score;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        NameSimilarityResponseBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public NameSimilarityResponseBuilder score(final Double score) {
            this.score = score;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public NameSimilarityResponse build() {
            return new NameSimilarityResponse(score);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "NameSimilarityResponse.NameSimilarityResponseBuilder(score=" + this.score + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static NameSimilarityResponseBuilder builder() {
        return new NameSimilarityResponseBuilder();
    }

    /**
     * @return name similarity result score (0.0-1.0)
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Double getScore() {
        return this.score;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof NameSimilarityResponse)) return false;
        final NameSimilarityResponse other = (NameSimilarityResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$score = this.getScore();
        final Object other$score = other.getScore();
        if (this$score == null ? other$score != null : !this$score.equals(other$score)) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof NameSimilarityResponse;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $score = this.getScore();
        result = result * PRIME + ($score == null ? 43 : $score.hashCode());
        return result;
    }
}
