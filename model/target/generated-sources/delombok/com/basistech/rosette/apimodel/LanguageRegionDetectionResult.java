// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import java.util.List;

/**
 * Language region detection result
 */
@JacksonMixin
public final class LanguageRegionDetectionResult {
    /**
     */
    private final String region;
    /**
     */
    private final List<LanguageDetectionResult> languages;

    @java.beans.ConstructorProperties({"region", "languages"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    LanguageRegionDetectionResult(final String region, final List<LanguageDetectionResult> languages) {
        this.region = region;
        this.languages = languages;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class LanguageRegionDetectionResultBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String region;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private List<LanguageDetectionResult> languages;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        LanguageRegionDetectionResultBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public LanguageRegionDetectionResultBuilder region(final String region) {
            this.region = region;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public LanguageRegionDetectionResultBuilder languages(final List<LanguageDetectionResult> languages) {
            this.languages = languages;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public LanguageRegionDetectionResult build() {
            return new LanguageRegionDetectionResult(region, languages);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "LanguageRegionDetectionResult.LanguageRegionDetectionResultBuilder(region=" + this.region + ", languages=" + this.languages + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static LanguageRegionDetectionResultBuilder builder() {
        return new LanguageRegionDetectionResultBuilder();
    }

    /**
     * @return the region text
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getRegion() {
        return this.region;
    }

    /**
     * @return the detected languages
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public List<LanguageDetectionResult> getLanguages() {
        return this.languages;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof LanguageRegionDetectionResult)) return false;
        final LanguageRegionDetectionResult other = (LanguageRegionDetectionResult) o;
        final Object this$region = this.getRegion();
        final Object other$region = other.getRegion();
        if (this$region == null ? other$region != null : !this$region.equals(other$region)) return false;
        final Object this$languages = this.getLanguages();
        final Object other$languages = other.getLanguages();
        if (this$languages == null ? other$languages != null : !this$languages.equals(other$languages)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $region = this.getRegion();
        result = result * PRIME + ($region == null ? 43 : $region.hashCode());
        final Object $languages = this.getLanguages();
        result = result * PRIME + ($languages == null ? 43 : $languages.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "LanguageRegionDetectionResult(region=" + this.getRegion() + ", languages=" + this.getLanguages() + ")";
    }
}
