// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;

/**
 * Rosette API response error data
 */
@JacksonMixin
public class ErrorResponse extends Response {
    /**
     */
    private String code;
    /**
     */
    private String message;

    @java.beans.ConstructorProperties({"code", "message"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    ErrorResponse(final String code, final String message) {
        this.code = code;
        this.message = message;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class ErrorResponseBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String code;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private String message;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        ErrorResponseBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public ErrorResponseBuilder code(final String code) {
            this.code = code;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public ErrorResponseBuilder message(final String message) {
            this.message = message;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public ErrorResponse build() {
            return new ErrorResponse(code, message);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "ErrorResponse.ErrorResponseBuilder(code=" + this.code + ", message=" + this.message + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static ErrorResponseBuilder builder() {
        return new ErrorResponseBuilder();
    }

    /**
     * @return the error code
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCode() {
        return this.code;
    }

    /**
     * @return the error message
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getMessage() {
        return this.message;
    }

    /**
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setCode(final String code) {
        this.code = code;
    }

    /**
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setMessage(final String message) {
        this.message = message;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "ErrorResponse(code=" + this.getCode() + ", message=" + this.getMessage() + ")";
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof ErrorResponse)) return false;
        final ErrorResponse other = (ErrorResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$code = this.getCode();
        final Object other$code = other.getCode();
        if (this$code == null ? other$code != null : !this$code.equals(other$code)) return false;
        final Object this$message = this.getMessage();
        final Object other$message = other.getMessage();
        if (this$message == null ? other$message != null : !this$message.equals(other$message)) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof ErrorResponse;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $code = this.getCode();
        result = result * PRIME + ($code == null ? 43 : $code.hashCode());
        final Object $message = this.getMessage();
        result = result * PRIME + ($message == null ? 43 : $message.hashCode());
        return result;
    }
}
