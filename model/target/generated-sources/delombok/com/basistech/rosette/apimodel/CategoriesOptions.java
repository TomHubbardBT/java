// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import javax.validation.constraints.Min;

/**
 * Categorization options
 */
@JacksonMixin
public final class CategoriesOptions extends Options {
    /**
     */
    @Min(1)
    private final Integer numCategories;

    @java.beans.ConstructorProperties({"numCategories"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    CategoriesOptions(final Integer numCategories) {
        this.numCategories = numCategories;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class CategoriesOptionsBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Integer numCategories;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        CategoriesOptionsBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public CategoriesOptionsBuilder numCategories(final Integer numCategories) {
            this.numCategories = numCategories;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public CategoriesOptions build() {
            return new CategoriesOptions(numCategories);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "CategoriesOptions.CategoriesOptionsBuilder(numCategories=" + this.numCategories + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static CategoriesOptionsBuilder builder() {
        return new CategoriesOptionsBuilder();
    }

    /**
     * @return number of categories
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Integer getNumCategories() {
        return this.numCategories;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof CategoriesOptions)) return false;
        final CategoriesOptions other = (CategoriesOptions) o;
        if (!other.canEqual((Object) this)) return false;
        if (!super.equals(o)) return false;
        final Object this$numCategories = this.getNumCategories();
        final Object other$numCategories = other.getNumCategories();
        if (this$numCategories == null ? other$numCategories != null : !this$numCategories.equals(other$numCategories)) return false;
        return true;
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final Object other) {
        return other instanceof CategoriesOptions;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + super.hashCode();
        final Object $numCategories = this.getNumCategories();
        result = result * PRIME + ($numCategories == null ? 43 : $numCategories.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "CategoriesOptions(numCategories=" + this.getNumCategories() + ")";
    }
}
