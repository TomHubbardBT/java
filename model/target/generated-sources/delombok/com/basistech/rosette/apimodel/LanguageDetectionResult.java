// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import com.basistech.util.LanguageCode;

/**
 * Language detection result
 */
@JacksonMixin
public final class LanguageDetectionResult {
    /**
     */
    private final LanguageCode language;
    /**
     */
    private final Double confidence;

    @java.beans.ConstructorProperties({"language", "confidence"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    LanguageDetectionResult(final LanguageCode language, final Double confidence) {
        this.language = language;
        this.confidence = confidence;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class LanguageDetectionResultBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private LanguageCode language;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Double confidence;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        LanguageDetectionResultBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public LanguageDetectionResultBuilder language(final LanguageCode language) {
            this.language = language;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public LanguageDetectionResultBuilder confidence(final Double confidence) {
            this.confidence = confidence;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public LanguageDetectionResult build() {
            return new LanguageDetectionResult(language, confidence);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "LanguageDetectionResult.LanguageDetectionResultBuilder(language=" + this.language + ", confidence=" + this.confidence + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static LanguageDetectionResultBuilder builder() {
        return new LanguageDetectionResultBuilder();
    }

    /**
     * @return the language code
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public LanguageCode getLanguage() {
        return this.language;
    }

    /**
     * @return the confidence
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Double getConfidence() {
        return this.confidence;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof LanguageDetectionResult)) return false;
        final LanguageDetectionResult other = (LanguageDetectionResult) o;
        final Object this$language = this.getLanguage();
        final Object other$language = other.getLanguage();
        if (this$language == null ? other$language != null : !this$language.equals(other$language)) return false;
        final Object this$confidence = this.getConfidence();
        final Object other$confidence = other.getConfidence();
        if (this$confidence == null ? other$confidence != null : !this$confidence.equals(other$confidence)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $language = this.getLanguage();
        result = result * PRIME + ($language == null ? 43 : $language.hashCode());
        final Object $confidence = this.getConfidence();
        result = result * PRIME + ($confidence == null ? 43 : $confidence.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "LanguageDetectionResult(language=" + this.getLanguage() + ", confidence=" + this.getConfidence() + ")";
    }
}
