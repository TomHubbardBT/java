// Generated by delombok at Mon Jan 22 15:21:35 EST 2018
/*
* Copyright 2017 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel;

import com.basistech.rosette.annotations.JacksonMixin;
import javax.validation.constraints.Min;

/**
 * The start and end offset/index for a given mention in a string of text
 */
@JacksonMixin
public final class MentionOffsets {
    /**
     */
    @Min(0)
    private final Integer startOffset;
    /**
     */
    @Min(0)
    private final Integer endOffset;

    @java.beans.ConstructorProperties({"startOffset", "endOffset"})
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    MentionOffsets(final Integer startOffset, final Integer endOffset) {
        this.startOffset = startOffset;
        this.endOffset = endOffset;
    }


    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static class MentionOffsetsBuilder {
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Integer startOffset;
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        private Integer endOffset;

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        MentionOffsetsBuilder() {
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MentionOffsetsBuilder startOffset(final Integer startOffset) {
            this.startOffset = startOffset;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MentionOffsetsBuilder endOffset(final Integer endOffset) {
            this.endOffset = endOffset;
            return this;
        }

        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public MentionOffsets build() {
            return new MentionOffsets(startOffset, endOffset);
        }

        @Override
        @SuppressWarnings("all")
        @javax.annotation.Generated("lombok")
        public String toString() {
            return "MentionOffsets.MentionOffsetsBuilder(startOffset=" + this.startOffset + ", endOffset=" + this.endOffset + ")";
        }
    }

    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public static MentionOffsetsBuilder builder() {
        return new MentionOffsetsBuilder();
    }

    /**
     * @return the offset for the first character of a mention, based on UTF-16 code page
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Integer getStartOffset() {
        return this.startOffset;
    }

    /**
     * @return the offset for the last character of a mention, based on UTF-16 code page
     */
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Integer getEndOffset() {
        return this.endOffset;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof MentionOffsets)) return false;
        final MentionOffsets other = (MentionOffsets) o;
        final Object this$startOffset = this.getStartOffset();
        final Object other$startOffset = other.getStartOffset();
        if (this$startOffset == null ? other$startOffset != null : !this$startOffset.equals(other$startOffset)) return false;
        final Object this$endOffset = this.getEndOffset();
        final Object other$endOffset = other.getEndOffset();
        if (this$endOffset == null ? other$endOffset != null : !this$endOffset.equals(other$endOffset)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $startOffset = this.getStartOffset();
        result = result * PRIME + ($startOffset == null ? 43 : $startOffset.hashCode());
        final Object $endOffset = this.getEndOffset();
        result = result * PRIME + ($endOffset == null ? 43 : $endOffset.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String toString() {
        return "MentionOffsets(startOffset=" + this.getStartOffset() + ", endOffset=" + this.getEndOffset() + ")";
    }
}
